# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Flutter CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Configura o ambiente Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x.x' # Ou a versão específica do Flutter que você usa, ex: '3.19.6'
          channel: 'stable' # Ou 'beta', 'dev' se você usa um canal diferente

      - name: Install dependencies
        run: flutter pub get

      # Opcional: Verificar formatação (descomente se quiser usar)
      # - name: Verify formatting
      #   run: flutter format --output=none --set-exit-if-changed .

      # Analisa o projeto Flutter
      - name: Analyze project source
        run: flutter analyze

      # Roda os testes Flutter
      - name: Run tests
        run: flutter test

      # --- Passos adicionais para Firebase/Build (Opcional) ---

      # Exemplo: Construir o APK para Android (descomente e configure se necessário)
      # - name: Build Android APK
      #   run: flutter build apk --release

      # Exemplo: Construir o IPA para iOS (requer macOS, descomente e configure se necessário)
      # - name: Build iOS IPA
      #   if: runner.os == 'macos'
      #   run: flutter build ios --release --no-codesign # Adicione --no-codesign para builds sem assinatura

      # Exemplo: Deploy para Firebase App Distribution (requer configuração de token)
      # - name: Deploy to Firebase App Distribution
      #   if: github.ref == 'refs/heads/main' # Só faz deploy no push para a branch main
      #   run: |
      #     flutter pub global activate flover
      #     # Use 'flover' ou o comando 'firebase appdistribution:distribute' aqui
      #     # Exemplo com Firebase CLI (instalar previamente via npm ou usar action dedicada):
      #     # npm install -g firebase-tools
      #     # firebase appdistribution:distribute your_app.apk --app your_app_id --token ${{ secrets.FIREBASE_TOKEN }}
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # Adicione este segredo no GitHub
